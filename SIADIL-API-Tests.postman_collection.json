{
  "info": {
    "name": "SIADIL API Tests",
    "description": "Collection untuk test API Demplon SIADIL",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "1. Login - Get Access Token",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "// Save token to environment variable",
              "if (pm.response.code === 200) {",
              "    const jsonData = pm.response.json();",
              "    if (jsonData.accessToken) {",
              "        pm.environment.set('accessToken', jsonData.accessToken);",
              "        console.log('✅ Token saved to environment');",
              "    }",
              "}"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"username\": \"YOUR_USERNAME\",\n  \"password\": \"YOUR_PASSWORD\"\n}"
        },
        "url": {
          "raw": "https://sso.pupuk-kujang.co.id/api/auth/login",
          "protocol": "https",
          "host": ["sso", "pupuk-kujang", "co", "id"],
          "path": ["api", "auth", "login"]
        },
        "description": "Login untuk mendapatkan access token.\n\nGanti USERNAME dan PASSWORD dengan credentials Anda.\n\nResponse akan otomatis menyimpan token ke environment variable."
      },
      "response": []
    },
    {
      "name": "2. Archives - Flat API (All Data)",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "// Analyze response",
              "if (pm.response.code === 200) {",
              "    const archives = pm.response.json();",
              "    ",
              "    console.log('\\n📊 FLAT API ANALYSIS:');",
              "    console.log('Total archives:', archives.length);",
              "    ",
              "    const roots = archives.filter(a => !a.id_parent);",
              "    const children = archives.filter(a => a.id_parent);",
              "    ",
              "    console.log('Root archives:', roots.length);",
              "    console.log('Child archives:', children.length);",
              "    ",
              "    console.log('\\n📁 Breakdown by Parent:');",
              "    roots.forEach(root => {",
              "        const rootChildren = archives.filter(a => a.id_parent === root.id);",
              "        console.log(`  ${root.code} (${root.name}): ${rootChildren.length} children`);",
              "    });",
              "    ",
              "    // Check for empty parents",
              "    const emptyParents = roots.filter(root => {",
              "        return archives.filter(a => a.id_parent === root.id).length === 0;",
              "    });",
              "    ",
              "    if (emptyParents.length > 0) {",
              "        console.log('\\n⚠️ Empty Parents:', emptyParents.map(p => p.code).join(', '));",
              "    }",
              "}"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "GET",
        "header": [
          {
            "key": "Authorization",
            "value": "Bearer {{accessToken}}",
            "description": "Token akan otomatis diambil dari environment variable"
          },
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "url": {
          "raw": "https://demplon.pupuk-kujang.co.id/admin/api/siadil/archives/",
          "protocol": "https",
          "host": ["demplon", "pupuk-kujang", "co", "id"],
          "path": ["admin", "api", "siadil", "archives", ""]
        },
        "description": "Fetch ALL archives dalam format flat array.\n\nSetiap archive punya `id_parent` untuk menunjukkan hierarchy.\n\nScript akan otomatis analyze dan menampilkan breakdown di Console."
      },
      "response": []
    },
    {
      "name": "3. Archives - Tree API (Hierarchical)",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "// Analyze response",
              "if (pm.response.code === 200) {",
              "    const archives = pm.response.json();",
              "    ",
              "    // Count total including nested children",
              "    function countTotal(items) {",
              "        let count = 0;",
              "        items.forEach(item => {",
              "            count++;",
              "            if (item.children && item.children.length > 0) {",
              "                count += countTotal(item.children);",
              "            }",
              "        });",
              "        return count;",
              "    }",
              "    ",
              "    const totalCount = countTotal(archives);",
              "    ",
              "    console.log('\\n🌲 TREE API ANALYSIS:');",
              "    console.log('Root count:', archives.length);",
              "    console.log('Total count (with children):', totalCount);",
              "    ",
              "    console.log('\\n📁 Breakdown:');",
              "    archives.forEach(root => {",
              "        const childCount = root.children ? root.children.length : 0;",
              "        console.log(`  ${root.code} (${root.name}): ${childCount} direct children`);",
              "        ",
              "        if (root.children && root.children.length > 0) {",
              "            root.children.forEach(child => {",
              "                const grandchildCount = child.children ? child.children.length : 0;",
              "                console.log(`    └─ ${child.code}: ${grandchildCount} sub-children`);",
              "            });",
              "        }",
              "    });",
              "    ",
              "    // Check for empty roots",
              "    const emptyRoots = archives.filter(root => !root.children || root.children.length === 0);",
              "    ",
              "    if (emptyRoots.length > 0) {",
              "        console.log('\\n⚠️ Empty Roots:', emptyRoots.map(r => r.code).join(', '));",
              "    }",
              "}"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "GET",
        "header": [
          {
            "key": "Authorization",
            "value": "Bearer {{accessToken}}",
            "description": "Token akan otomatis diambil dari environment variable"
          },
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "url": {
          "raw": "https://demplon.pupuk-kujang.co.id/admin/api/siadil/archives/?tree=true",
          "protocol": "https",
          "host": ["demplon", "pupuk-kujang", "co", "id"],
          "path": ["admin", "api", "siadil", "archives", ""],
          "query": [
            {
              "key": "tree",
              "value": "true",
              "description": "Return hierarchical structure dengan children"
            }
          ]
        },
        "description": "Fetch archives dalam format tree (hierarchical).\n\nSetiap root archive punya `children` array untuk sub-folders.\n\nScript akan otomatis analyze dan menampilkan structure di Console."
      },
      "response": []
    },
    {
      "name": "4. Documents - All Documents",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "// Analyze response",
              "if (pm.response.code === 200) {",
              "    const response = pm.response.json();",
              "    const documents = response.data || response;",
              "    ",
              "    console.log('\\n📄 DOCUMENTS ANALYSIS:');",
              "    console.log('Total documents:', Array.isArray(documents) ? documents.length : 'N/A');",
              "    console.log('Total from API:', response.recordsTotal || response.recordsFiltered || 'N/A');",
              "    ",
              "    if (Array.isArray(documents) && documents.length > 0) {",
              "        console.log('\\nSample document:', documents[0]);",
              "    }",
              "}"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "GET",
        "header": [
          {
            "key": "Authorization",
            "value": "Bearer {{accessToken}}"
          },
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "url": {
          "raw": "https://demplon.pupuk-kujang.co.id/admin/api/siadil/documents/?start=0&length=100&reminder_active=false",
          "protocol": "https",
          "host": ["demplon", "pupuk-kujang", "co", "id"],
          "path": ["admin", "api", "siadil", "documents", ""],
          "query": [
            {
              "key": "start",
              "value": "0",
              "description": "Starting index for pagination"
            },
            {
              "key": "length",
              "value": "100",
              "description": "Number of items to return"
            },
            {
              "key": "reminder_active",
              "value": "false",
              "description": "Filter by reminder status"
            }
          ]
        },
        "description": "Fetch documents dengan pagination.\n\nUbah `start` dan `length` untuk pagination.\n\nSet `reminder_active=true` untuk filter dokumen dengan reminder aktif."
      },
      "response": []
    },
    {
      "name": "5. Compare Flat vs Tree",
      "event": [
        {
          "listen": "prerequest",
          "script": {
            "exec": [
              "// This will run before the request",
              "console.log('⚠️ This is a placeholder request');",
              "console.log('Run requests 2 and 3 first, then compare manually in Console');"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "https://httpbin.org/get",
          "protocol": "https",
          "host": ["httpbin", "org"],
          "path": ["get"]
        },
        "description": "**MANUAL COMPARISON GUIDE:**\n\n1. Run request \"2. Archives - Flat API\"\n2. Copy response to text editor\n3. Run request \"3. Archives - Tree API\"\n4. Copy response to text editor\n5. Compare both:\n   - Count total archives\n   - Check children count per parent\n   - Identify missing sub-folders\n\n**Check Console tab** for automatic analysis from both requests."
      },
      "response": []
    }
  ],
  "variable": [
    {
      "key": "baseUrl",
      "value": "https://demplon.pupuk-kujang.co.id/admin/api/siadil",
      "type": "string"
    }
  ]
}
